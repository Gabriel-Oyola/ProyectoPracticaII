@page "/PTaller/EditarTaller/{TallerId:int}"
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@using ProyectoPracticaII.Client.Models;
@inject IHttpService Ihttp
@inject HttpClient http
@inject NavigationManager NavigatorManager
@inject AuthenticationStateProvider autenticacionProvider;
@attribute [Authorize(Roles = "UsuarioRegistrado")]
@inject NavigationManager NavManager 



<FormTaller taller="taller" onCancel="Cancelar" />




@code {
    Taller taller = new Taller();
    [Parameter] public int TallerId { get; set; }
    string IdUsuario;
    string userPreferences;
    string storedUserPreferences;
    @inject IJSRuntime JSRuntime

    protected async override Task OnInitializedAsync()
    {
        await Mostrar();
        
    }
    


    private async Task Mostrar()
    {
        var respuesta = await Ihttp.Get<Taller>($"api/Taller/{TallerId}");
        if (respuesta.Error)
        {
            var body = respuesta.Respuesta;
        }
        else
        {
            taller = respuesta.Respuesta;
        }
    }

    private void Cancelar()
    {
        NavigatorManager.NavigateTo($"/PTaller/ListaTaller/{taller.IdUsuario}");
    }
}
