@page "/PTienda/BTiendas"
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider autenticacionProvider;
@attribute [Authorize(Roles = "UsuarioRegistrado")]
@inject NavigationManager NavManager
@inject HttpClient http


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
   <style>
        * {
            margin: 0;
            padding: 0;
       
        }
        html {
            height: 100%;
        }

        body {
            display: flex;
            background-color: gray;
            flex-direction: column;
            min-height: 100%;
            margin: 0;
        }
   </style>
</head>
<body>
    <header>
        <section id="Menu">
            <ul>
                <a @onclick="ReadPerfil">Mi Perfil</a>
                <a @onclick="Read">Mis Motos</a>
                <a @onclick="ReadTaller">Mi Taller</a>
                
            </ul>

        </section>
    </header>

    <br />
    <br />

    <iframe src="https://www.google.com/maps/d/embed?mid=1bMEqTnZfVN6LxPWMgR7lwE8r61wozTM&ehbc=2E312F&noprof=1" width="100%" height="500"></iframe>

    <br />
   
    <br />
    <br />
    <Footer>
    <p> Motored &copy;. Todos los derechos reservados</p>
    </Footer>
</body>



</html>
@code{
   

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();


    }

   


    private async Task BuscarTalleres()
    {
        // Realizar la solicitud al controlador de búsqueda




      




    }

    string IdUsuario;
    string userPreferences;
    string storedUserPreferences;
    @inject IJSRuntime JSRuntime

    private async Task ReadPerfil()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavManager.NavigateTo($"/MiPerfil/{IdUsuario}");



    }
    private async Task Read()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavManager.NavigateTo($"/PMotocicletas/ListaMotocicletas/{IdUsuario}");



    }
    private async Task ReadTaller()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavManager.NavigateTo($"/PTaller/ListaTaller/{IdUsuario}");



    }
    private async Task ObtenerIdUsuario()
    {
        try
        {

            var apiUrl = $"api/RastrearId?correo={storedUserPreferences}";

            var response = await http.GetAsync(apiUrl);
            if (response.IsSuccessStatusCode)
            {
                IdUsuario = await response.Content.ReadAsStringAsync();
            }
            else
            {
                IdUsuario = "Error al obtener el ID del usuario";
            }
        }
        catch (Exception ex)
        {
            IdUsuario = $"Error: {ex.Message}";
        }
    }
}