@page "/Opinion/verOpinion/{Idtaller:int}"


@using ProyectoPracticaII.Client.Models;
@inject IHttpService Ihttp
@inject HttpClient http
@inject NavigationManager NavigatorManager
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider autenticacionProvider;
@attribute [Authorize]


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

    <header>
        <section id="Menu">
            <ul>
                <a href="/Inicio">Inicio</a>
                <a @onclick="ReadPerfil">Mi Perfil</a>
                <a @onclick="Read">Mis Motos</a>
                <a @onclick="ReadTaller">Mi Taller</a>
                
            </ul>

        </section>
    </header>

    @if (opiniones != null)
    {
        <table>
            <thead>
                <tr>
                   
                    <th>Comentario</th>
                    <th>Fecha</th>
                    <th>Rating</th>
                    <th>-</th>
                    <th>-</th>
                  
                </tr>
            </thead>
            <tbody>
                @foreach (var opinion in opiniones)
                {
                    <tr>
                        <td>@opinion.Comentario</td>
                        <td>@opinion.Fecha</td>
                        <td>@opinion.Rating</td>
                          <td>
                            <ProyectoPracticaII.Client.Pages.PTallerTop.StarRating Rating="@Convert.ToInt32(opinion.Rating)" />
                        </td>
                        <td>
                            <a class="btn btn-danger" href="/Opinion/ReporteOpinion/@opinion.IdOpinion"> Reportar</a>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No hay opiniones disponibles.</p>
    }




    

    <Footer>
    <p> Motored &copy;. Todos los derechos reservados</p>
    </Footer>
</body>




</html>





@code {
    [Parameter] public int Idtaller { get; set; }
    [Parameter] public int login { get; set; }
    List<Opinione> opiniones;
    string IdUsuario;
    string userPreferences;
    string storedUserPreferences;
    @inject IJSRuntime JSRuntime

    private async Task ReadPerfil()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavigatorManager.NavigateTo($"/MiPerfil/{IdUsuario}");



    }
    private async Task Read()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavigatorManager.NavigateTo($"/PMotocicletas/ListaMotocicletas/{IdUsuario}");



    }
    private async Task ReadTaller()
    {

        storedUserPreferences = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "correo");



        await ObtenerIdUsuario();

        NavigatorManager.NavigateTo($"/PTaller/ListaTaller/{IdUsuario}");



    }
    async Task ObtenerIdUsuario()
    {
        try
        {

            var apiUrl = $"api/RastrearId?correo={storedUserPreferences}";

            var response = await http.GetAsync(apiUrl);
            if (response.IsSuccessStatusCode)
            {
                IdUsuario = await response.Content.ReadAsStringAsync();
            }
            else
            {
                IdUsuario = "Error al obtener el ID del usuario";
            }
        }
        catch (Exception ex)
        {
            IdUsuario = $"Error: {ex.Message}";
        }
    }
   


    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }


    private async Task Leer()
    {

        var respuesta = await Ihttp.Get<List<Opinione>>($"api/Opinion/GetOpinionesPorIdTaller/{Idtaller}");
        if (!respuesta.Error)
        {
            opiniones = respuesta.Respuesta;
        }
    }

    
    
   


   

}
