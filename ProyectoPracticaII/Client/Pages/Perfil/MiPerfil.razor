@page "/MiPerfil/{login:int}"
@using ProyectoPracticaII.Client.Models;
@inject IHttpService http
@inject NavigationManager NavigatorManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <style>
        html{
            height: 100%;
        }
        html, body{

            background-color: gray;
            flex-direction:column; 
            min-height:100%; 
        }
    </style>
</head>
<body>
    <header>
        <section id="Menu">
            <ul>
                <a href="/Inicio">Inicio</a>
                <a href="/MiPerfil">Mi Perfil</a>
                <a href="PMotocicletas/ListaMotocicletas/"> Mis Motos</a>
                <a href="#">Mi Taller</a>
           
            </ul>
        </section>
    </header>

    

@if (Usuarios == null)
{
    <td>Cargando...</td>
}
else
{
    @foreach (var item in Usuarios)
    {
        <div class="datos">

        <label>Correo</label>
        <td>@item.Correo</td>

        <br />
        <br />

        <label>Nombre De Usuario</label>
        <td>@item.NombreUsuario</td>

        <br />
        <br />

        <label>Clave</label>
        <td>@item.Clave</td>

        </div>

            <button class="EditarPerfilBoton"><a href="/EditarPerfil/{login}">Editar Perfil</a></button>
    }
}
    


    <br/>
    <br/>
    </body>
        
    <Footer>
    <p> Motored &copy;. Todos los derechos reservados</p>
    </Footer>

  


</html>


@code {
    [Parameter] public int login { get; set; }
    List<Usuario> Usuarios;





    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }


    private async Task Leer()
    {

        var respuesta = await http.Get<List<Usuario>>($"api/MostrarPerfil/{login}");
        if (!respuesta.Error)
        {
            Usuarios = respuesta.Respuesta;
        }
    }


}
