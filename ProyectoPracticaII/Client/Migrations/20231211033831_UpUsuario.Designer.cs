// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoPracticaII.Client.Models;

#nullable disable

namespace ProyectoPracticaII.Client.Migrations
{
    [DbContext(typeof(Motored01Context))]
    [Migration("20231211033831_UpUsuario")]
    partial class UpUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Motocicleta", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMoto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<string>("Aseguradora")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Patente")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.HasKey("IdMoto")
                        .HasName("PK__Motocicl__C0D1CACF584CC891");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Motocicletas");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Opinione", b =>
                {
                    b.Property<int>("IdOpinion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOpinion"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Fecha")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdTaller")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("IdOpinion")
                        .HasName("PK__opinione__2F8F71D7CB0B9203");

                    b.HasIndex("IdTaller");

                    b.HasIndex("IdUsuario");

                    b.ToTable("opiniones", (string)null);
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.ReportesOpinione", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comentario");

                    b.Property<string>("Fecha")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdOpinion")
                        .HasColumnType("int");

                    b.Property<int?>("IdTaller")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioRc")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuarioRC");

                    b.Property<string>("Motivo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("IdReporte")
                        .HasName("PK__Reportes__F9561136C9B2406A");

                    b.HasIndex("IdOpinion");

                    b.ToTable("ReportesOpiniones");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Taller", b =>
                {
                    b.Property<int>("IdTaller")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTaller"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Horarios")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("LinksMapa")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Localidad")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NombreTaller")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Numero")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("País")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdTaller")
                        .HasName("PK__Taller__AC44FFD633AC2651");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Taller", (string)null);
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.TallerTop", b =>
                {
                    b.Property<int>("IdTop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTop"));

                    b.Property<int>("IdTaller")
                        .HasColumnType("int");

                    b.Property<string>("NombreTaller")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("PromedioRating")
                        .HasColumnType("float")
                        .HasColumnName("PromedioRating");

                    b.HasKey("IdTop")
                        .HasName("PK__TallerTo__2BC545E13E345D15");

                    b.HasIndex("IdTaller");

                    b.ToTable("TallerTop", (string)null);
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<float?>("DNI")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("real");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF97E5CC0B2D");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Motocicleta", b =>
                {
                    b.HasOne("ProyectoPracticaII.Client.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Motocicleta")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("fk_moto");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Opinione", b =>
                {
                    b.HasOne("ProyectoPracticaII.Client.Models.Taller", "IdTallerNavigation")
                        .WithMany("Opiniones")
                        .HasForeignKey("IdTaller")
                        .HasConstraintName("fk_IdTallerr");

                    b.HasOne("ProyectoPracticaII.Client.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Opiniones")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("fk_IdUsuarioO");

                    b.Navigation("IdTallerNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.ReportesOpinione", b =>
                {
                    b.HasOne("ProyectoPracticaII.Client.Models.Opinione", "IdOpinionNavigation")
                        .WithMany("ReportesOpiniones")
                        .HasForeignKey("IdOpinion")
                        .HasConstraintName("fk_IdOpinion");

                    b.Navigation("IdOpinionNavigation");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Taller", b =>
                {
                    b.HasOne("ProyectoPracticaII.Client.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Tallers")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("fk_IdUsuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.TallerTop", b =>
                {
                    b.HasOne("ProyectoPracticaII.Client.Models.Taller", "IdTallerNavigation")
                        .WithMany()
                        .HasForeignKey("IdTaller")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_IdTaller");

                    b.Navigation("IdTallerNavigation");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Opinione", b =>
                {
                    b.Navigation("ReportesOpiniones");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Taller", b =>
                {
                    b.Navigation("Opiniones");
                });

            modelBuilder.Entity("ProyectoPracticaII.Client.Models.Usuario", b =>
                {
                    b.Navigation("Motocicleta");

                    b.Navigation("Opiniones");

                    b.Navigation("Tallers");
                });
#pragma warning restore 612, 618
        }
    }
}
