

@page "/PTaller/ListaTaller/{login:int}"

@using ProyectoPracticaII.Client.Models;
@inject HttpClient http
@inject IHttpService Ihttp

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

    <header>
        <section id="Menu">
            <ul>
                <a href="/">Inicio</a>
                <a href="#">Mi Perfil</a>
                <a href="PMotocicletas/ListaMotocicletas/">Mis Motos</a>
                <a href="#">Salir</a>
            </ul>

        </section>
    </header>

    <br />




    <br />

    <h3>TUS TALLERES</h3>

    <br />
    <div class="btnCentrado">
        <a class="btnCrear" href="/PTaller/CrearT"> REGISTRAR UN NUEVO TALLER</a>
    </div>
   
    <div id="main-container">
        
        <table>
            <thead>
                <tr>

                    <th>Nombre</th>
                    <th>Dirección</th>
                    <th>Email</th>
                    <th>Numero</th>
                    <th>Horarios</th>
        
                    <th>-</th>
                    <th>-</th>
                </tr>
            </thead>
          

            @if (talleres == null)
            {
                <tr>Cargando...</tr>
            }
            else if (talleres.Count == 0)
            {
                <tr>No existen datos</tr>
            }
            else
            {
                @foreach (var item in talleres)
                {
                    <tr>

                        <td>@item.NombreTaller</td>
                        <td>@item.Direccion</td>
                        <td>@item.Email</td>
                        <td>@item.Numero</td>
                        <td>@item.Horarios</td>
                      
                        <td>
                            <a class="btn btn-primary" href="/PTaller/EditarTaller/@item.IdTaller"> Editar</a>
                        </td>

                        <td>
                            <button class="btn btn-warning" @onclick="()=>ConfirmarDarDeBaja(item.IdTaller)">Dar de baja</button>
                        </td>



                    </tr>


                    @if (MostrarModalConfirmacion)
                    {
                        <div class="modal" style="display: block; color: white; ">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    
                                        <h5>CONFIRMAR BAJA DE TALLER</h5>

                                   
                                    <p>¿Está seguro de que desea dar de baja este taller? </p>

                                  
                                        
                                        <button type="button" class="btn btn-danger" @onclick="()=>{ DarDeBajaTaller(item.IdTaller); MostrarModalConfirmacion = false; }">Confirmar</button>
                                    <button type="button" class="btn btn-secondary" @onclick="()=>MostrarModalConfirmacion = false">Cancelar</button>
                                    </div>
                                </div>
                            </div>
                        
                    }
                }
            }

        </table>
    </div>


    

    <Footer>
    <p> Motored &copy;. Todos los derechos reservados</p>
    </Footer>
</body>




</html>




@code {
        List<Taller> talleres;
        Taller NuevoTaller = new Taller();
        [Parameter] public int login { get; set; }
    private int idTallerSeleccionado;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }


    private async Task Leer()
    {

        var respuesta = await Ihttp.Get<List<Taller>>($"api/ListaTaller/{login}");
        if (!respuesta.Error)
        {
            talleres = respuesta.Respuesta;
        }
    }

    private void ConfirmarDarDeBaja(int idTaller)
    {
        idTallerSeleccionado = idTaller;
        MostrarModalConfirmacion = true; // Muestra el modal de confirmación
    }

    private async Task DarDeBajaTaller(int id)
    {
        try
        {
            var response = await http.PutAsync($"api/ListaTaller/ActualizarEstado/{id}", null);

            if (response.IsSuccessStatusCode)
            {
                // La solicitud fue exitosa, puedes realizar alguna acción adicional si es necesario
                Console.WriteLine("Taller dado de baja exitosamente");
            }
            else
            {
                // Si la solicitud no fue exitosa, puedes manejar el error aquí
                Console.WriteLine("Hubo un problema al dar de baja el taller");
            }
        }
        catch (Exception ex)
        {
            // Manejo de excepciones
            Console.WriteLine($"Error: {ex.Message}");
        }
   
    }
    private bool MostrarModalConfirmacion = false;

    public async Task EliminarTaller(int id)
    {
        var resultado = await http.DeleteAsync($"api/Taller/{id}");

        await Leer(); 
    }
}